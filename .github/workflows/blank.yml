name: CI

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:  
  sys_info:
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v3
      
      - name: check tools
        run: |
          cmake --version
          gcc --version
        
  configuration:
    needs: [sys_info]
    runs-on: ${{ matrix.os }} 
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v3
      
      - name: configure_cmake_${{ matrix.os }}
        run: |
          mkdir config && cd config
          cmake ../
          
      - name: save_configuration
        uses: actions/upload-artifact@master
        with:
          name: cmake_configuration_${{ matrix.os }}
          path: config/
      
      - name: deb
        run: ls config
          
  build:
    needs: [configuration]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v3
      
      - name: download_configuration
        uses: actions/download-artifact@master
        with:
          name: cmake_configuration_${{ matrix.os }}
          path: config/
      
      - name: deb
        run: ls
      
      - name: cmake_build_${{ matrix.os }}
        run: |
          cmake --build .
  tests:
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - name: run_unix_test
        run: |
          ./test/GHA-frac.test
      
  result:
    needs: [tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - name: result
        run: |
          ./src/GHA-frac.info
          
  report:
    needs: [result]
    if: failure() 
    runs-on: ubuntu-latest
    steps:
      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            
            Repository: ${{ github.repository }}
            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
        
        
        
        
        
        
        
        
          
  #sys_info_windows:
  #  runs-on: windows-latest 
  #  steps:
  #    - uses: actions/checkout@v3
  #    
  #    - name: check tools
  #      run: |
  #        cmake --version
          
  #build_windows:
  #  needs: [sys_info_windows]
  #  runs-on: windows-latest
  #  steps: 
  #    - uses: actions/checkout@v2
  #   - uses: ilammy/msvc-dev-cmd@v1
  #    - name: install_vcpkg
  #      run: |
  #        git clone https://github.com/Microsoft/vcpkg.git
  #        .\vcpkg\bootstrap-vcpkg.bat
  #        vcpkg install pthread
  #        vcpkg integrate install
          
  #    - name: debug1
  #      run: dir
  #    - name: build
  #      run: |
  #        cmake -S ./ -DCMAKE_TOOLCHAIN_FILE=scripts/buildsystems/vcpkg.cmake -G "Visual Studio 17 2022" -A x64  
  #        cmake --build . --config Release
  #    - name: debug
  #      run: dir
  
